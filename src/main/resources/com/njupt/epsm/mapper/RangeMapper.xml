<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njupt.epsm.mapper.RangeMapper">
  <resultMap id="BaseResultMap" type="com.njupt.epsm.po.Range">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="range_name" jdbcType="VARCHAR" property="rangeName" />
    <result column="exercise_id" jdbcType="BIGINT" property="exerciseId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="dig_bug_nums" jdbcType="INTEGER" property="digBugNums" />
    <result column="attack_times" jdbcType="INTEGER" property="attackTimes" />
    <result column="defend_time" jdbcType="INTEGER" property="defendTime" />
    <result column="defend_percent" jdbcType="DECIMAL" property="defendPercent" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, range_name, exercise_id, start_time, end_time, status, dig_bug_nums, attack_times, 
    defend_time, defend_percent, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.njupt.epsm.po.RangeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from range
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from range
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from range
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.njupt.epsm.po.RangeExample">
    delete from range
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njupt.epsm.po.Range">
    insert into range (id, range_name, exercise_id, 
      start_time, end_time, status, 
      dig_bug_nums, attack_times, defend_time, 
      defend_percent, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{rangeName,jdbcType=VARCHAR}, #{exerciseId,jdbcType=BIGINT}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{status,jdbcType=CHAR}, 
      #{digBugNums,jdbcType=INTEGER}, #{attackTimes,jdbcType=INTEGER}, #{defendTime,jdbcType=INTEGER}, 
      #{defendPercent,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.njupt.epsm.po.Range">
    insert into range
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rangeName != null">
        range_name,
      </if>
      <if test="exerciseId != null">
        exercise_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="digBugNums != null">
        dig_bug_nums,
      </if>
      <if test="attackTimes != null">
        attack_times,
      </if>
      <if test="defendTime != null">
        defend_time,
      </if>
      <if test="defendPercent != null">
        defend_percent,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="rangeName != null">
        #{rangeName,jdbcType=VARCHAR},
      </if>
      <if test="exerciseId != null">
        #{exerciseId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="digBugNums != null">
        #{digBugNums,jdbcType=INTEGER},
      </if>
      <if test="attackTimes != null">
        #{attackTimes,jdbcType=INTEGER},
      </if>
      <if test="defendTime != null">
        #{defendTime,jdbcType=INTEGER},
      </if>
      <if test="defendPercent != null">
        #{defendPercent,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njupt.epsm.po.RangeExample" resultType="java.lang.Long">
    select count(*) from range
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update range
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.rangeName != null">
        range_name = #{record.rangeName,jdbcType=VARCHAR},
      </if>
      <if test="record.exerciseId != null">
        exercise_id = #{record.exerciseId,jdbcType=BIGINT},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.digBugNums != null">
        dig_bug_nums = #{record.digBugNums,jdbcType=INTEGER},
      </if>
      <if test="record.attackTimes != null">
        attack_times = #{record.attackTimes,jdbcType=INTEGER},
      </if>
      <if test="record.defendTime != null">
        defend_time = #{record.defendTime,jdbcType=INTEGER},
      </if>
      <if test="record.defendPercent != null">
        defend_percent = #{record.defendPercent,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update range
    set id = #{record.id,jdbcType=BIGINT},
      range_name = #{record.rangeName,jdbcType=VARCHAR},
      exercise_id = #{record.exerciseId,jdbcType=BIGINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=CHAR},
      dig_bug_nums = #{record.digBugNums,jdbcType=INTEGER},
      attack_times = #{record.attackTimes,jdbcType=INTEGER},
      defend_time = #{record.defendTime,jdbcType=INTEGER},
      defend_percent = #{record.defendPercent,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njupt.epsm.po.Range">
    update range
    <set>
      <if test="rangeName != null">
        range_name = #{rangeName,jdbcType=VARCHAR},
      </if>
      <if test="exerciseId != null">
        exercise_id = #{exerciseId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="digBugNums != null">
        dig_bug_nums = #{digBugNums,jdbcType=INTEGER},
      </if>
      <if test="attackTimes != null">
        attack_times = #{attackTimes,jdbcType=INTEGER},
      </if>
      <if test="defendTime != null">
        defend_time = #{defendTime,jdbcType=INTEGER},
      </if>
      <if test="defendPercent != null">
        defend_percent = #{defendPercent,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njupt.epsm.po.Range">
    update range
    set range_name = #{rangeName,jdbcType=VARCHAR},
      exercise_id = #{exerciseId,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR},
      dig_bug_nums = #{digBugNums,jdbcType=INTEGER},
      attack_times = #{attackTimes,jdbcType=INTEGER},
      defend_time = #{defendTime,jdbcType=INTEGER},
      defend_percent = #{defendPercent,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>